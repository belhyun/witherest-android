package com.teamteam.witherest;

import java.util.Random;

import android.content.Intent;
import android.os.Bundle;
import android.support.v4.app.FragmentActivity;
import android.support.v4.view.ViewPager;
import android.support.v4.view.ViewPager.OnPageChangeListener;
import android.util.Log;
import android.view.Window;
import android.widget.Toast;

import com.teamteam.customComponent.WaitProgressDialog;
import com.teamteam.witherest.common.AndroUtils;
import com.teamteam.witherest.service.CategoryService;
import com.teamteam.witherest.service.Service;
import com.teamteam.witherest.service.ServiceManager;
import com.teamteam.witherest.service.callback.CategoryServiceCallback;
import com.teamteam.witherest.service.callback.object.BaseResponseObject;
import com.teamteam.witherest.service.callback.object.CategoryRoomCountResponseObject;
import com.teamteam.witherest.service.callback.object.CategoryRoomListResponseObject;
import com.viewpagerindicator.PageIndicator;
import com.viewpagerindicator.TitlePageIndicator;


public class CheckRoomListActivity extends FragmentActivity implements OnPageChangeListener, CategoryServiceCallback {
		
	   public static int DEFALUT_PAGE= 1;
	   
	   public static int ROOMLIST_ORDER_REGISTER_DATE = 1;
	   public static int ROOMLIST_ORDER_PUPULATE = 2;
	
	  
	   public CheckRoomViewPagerAdapter mAdapter;
	   public CheckRoomListFragment[] checkRoomFragements  = new CheckRoomListFragment[2];
	   public ViewPager mPager;
	   public PageIndicator mIndicator;
	   private WaitProgressDialog waitProgressDialog;
	   
	   public CategoryRoomListResponseObject regRoomListObject;
	   public CategoryRoomListResponseObject popRoomListObject;
	   public CategoryService categoryService;
	   public int categoryId;
	   public int requestType; 
	   public boolean isAllLoaded = false;

	@Override
	public void onCreate(Bundle savedInstanceState) {
	    super.onCreate(savedInstanceState);
	    requestWindowFeature(Window.FEATURE_NO_TITLE);
	    setContentView(R.layout.activity_roomlist);
	    initInstance();
	    initView(); 
	    getCheckRooms(ROOMLIST_ORDER_REGISTER_DATE);
	}
	
	public void initInstance(){
		 waitProgressDialog = new WaitProgressDialog(this, getResources().getString(R.string.wait_title),
	    			getString(R.string.wait_message));   
	
		categoryService = ServiceManager.getServiceManager().getCategoryService();
	
		checkRoomFragements[0] = CheckRoomListFragment.newInstance(getResources().getString(R.string.recent),
				ROOMLIST_ORDER_REGISTER_DATE,1);	
		
		checkRoomFragements[1] = CheckRoomListFragment.newInstance(getResources().getString(R.string.populate),
				ROOMLIST_ORDER_PUPULATE,1);
	
		 
		Intent i = getIntent();
        categoryId = i.getIntExtra("categoryId", DEFALUT_PAGE);
	}
	
	public void initView(){
		mAdapter = new CheckRoomViewPagerAdapter(getSupportFragmentManager(), this,checkRoomFragements);
		mPager = (ViewPager)findViewById(R.id.pager);
	    mPager.setAdapter(mAdapter);
	    mIndicator = (TitlePageIndicator)findViewById(R.id.indicator);
	    mIndicator.setViewPager(mPager);
	    mIndicator.setOnPageChangeListener(this);
	}

	
	public void getCheckRooms(int type){
		if (!waitProgressDialog.isShowing()){
			waitProgressDialog.start();
		}
		
		requestType = type;
		CategoryService categoryService = ServiceManager.getServiceManager().getCategoryService();
		categoryService.setOnCategoryCallback(this);
		categoryService.getRoomsByCategory(categoryId, requestType );
	}
	
	public void onPageScrollStateChanged(int state) {}
	public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {}
	public void onPageSelected(int position) {
		  /*Toast.makeText(CheckRoomListActivity.this, "Changed to page " + position, Toast.LENGTH_SHORT).show();	*/
	}

	public void onCategoryServiceCallback(BaseResponseObject object) {
		
		if (object.resultCode == Service.RESULT_FAIL) {
			AndroUtils.showToastMessage(this, object.requestType + " : " + object.resultMsg, Toast.LENGTH_SHORT);
			return;
		}
		
		switch(object.requestType){
		case Service.REQUEST_TYPE_GET_ROOMS_BY_CATEGORY:
			if ( requestType == ROOMLIST_ORDER_REGISTER_DATE ){
				regRoomListObject = (CategoryRoomListResponseObject)object;
				requestType = 2;
				getCheckRooms(2);
			}else if (requestType == 2){
				WaitProgressDialog.stop(waitProgressDialog);
				popRoomListObject = (CategoryRoomListResponseObject)object;
				isAllLoaded = true;
			}
			break;
		}
		
		if (isAllLoaded){
			setRoomListToFragments();
		}
	}

	private void setRoomListToFragments() {
		checkRoomFragements[0].setRoomListObject(regRoomListObject);
		checkRoomFragements[1].setRoomListObject(popRoomListObject);
		
	}


}
