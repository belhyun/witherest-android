package com.teamteam.witherest;

import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.Window;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

import com.teamteam.customComponent.WaitProgressDialog;
import com.teamteam.witherest.model.Session;
import com.teamteam.witherest.service.Service;
import com.teamteam.witherest.service.ServiceManager;
import com.teamteam.witherest.service.UserService;
import com.teamteam.witherest.service.callback.UserServiceCallback;
import com.teamteam.witherest.vo.BaseResponseObject;
import com.teamteam.witherest.vo.LoginResponseObject;

public class LoginActivity extends Activity implements OnClickListener,UserServiceCallback{
	
	private WaitProgressDialog waitProgressDialog;
	
	private EditText id_edittext;
	private EditText passwd_edittext;
	private Button login_btn;
	
	@Override
	public void onCreate(Bundle savedInstanceState) {
	    super.onCreate(savedInstanceState);
	    requestWindowFeature(Window.FEATURE_NO_TITLE);
	    setContentView(R.layout.activity_login);
	    
	    id_edittext = (EditText) findViewById(R.id.activity_login_id_edittext);
	    passwd_edittext = (EditText) findViewById(R.id.activity_login_passwd_edittext);
	    
	    login_btn = (Button) findViewById(R.id.activity_login_login_btn);
	    login_btn.setOnClickListener(this);
	}
    
	public void onClick(View v) {
		switch(v.getId()) {
		case R.id.activity_login_login_btn: {
			
			final String id = id_edittext.getText().toString();
			final String passwd = passwd_edittext.getText().toString();
			
			/* id form value check */
			if(id == null || id.length() == 0) {
				Toast.makeText(LoginActivity.this, getString(R.string.login_insert_id_empty), Toast.LENGTH_SHORT).show();
				break;
			}
			
			/* passwd form value check */
			if(passwd == null || passwd.length() == 0) {
				Toast.makeText(LoginActivity.this, getString(R.string.login_insert_passwd_empty), Toast.LENGTH_SHORT).show();
				break;
			} 
				
		/*	 Progress Dialog Start */
			waitProgressDialog = new WaitProgressDialog(LoginActivity.this, getString(R.string.login_dialog_title),getString(R.string.login_dialog_message));
			waitProgressDialog.start();

	
			ServiceManager serviceManager = ServiceManager.getServiceManager();
			UserService userService = serviceManager.getUserService();
			userService.setOnUserCallback(this);
			userService.login(id, passwd, "test");
			}
		}
	}

	public void onUserServiceCallback(BaseResponseObject object) {
		waitProgressDialog.stop(waitProgressDialog);
		if (object.resultCode == Service.REULT_FAIL) {
			showMessageToast(object.resultMsg);
			return;
		}
		switch(object.requestType){
		case Service.REQUEST_LOGIN:
			LoginResponseObject obj = (LoginResponseObject)object;
			Session.getInstance().sessionStatus = Session.AUTHORIZED;
			Session.getInstance().sessionKey = obj.token;
			
			finish();
			Intent i = new Intent(this, MainActivity.class);
			//i.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
			startActivity(i);
			Toast.makeText(this, obj.resultMsg + " : " + obj.token, Toast.LENGTH_LONG).show();
		
			break;
		case Service.REQUEST_DUPL_CHECK:
			break;
		case Service.REQUEST_JOIN:
			break;
		case Service.REQUEST_LOGOUT:
			break;
		}
	}

	private void showMessageToast(String resultMsg) {
		Toast.makeText(this,resultMsg, Toast.LENGTH_LONG).show();
	}


}