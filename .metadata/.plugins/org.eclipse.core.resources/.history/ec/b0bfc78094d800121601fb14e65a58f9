package com.teamteam.witherest;

import android.app.Activity;
import android.app.AlertDialog;
import android.content.DialogInterface;
import android.content.Intent;
import android.os.Bundle;
import android.view.KeyEvent;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.Window;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;

import com.teamteam.customComponent.SimpleProgressDialog;
import com.teamteam.witherest.common.AndroUtils;
import com.teamteam.witherest.common.CommonUtils;
import com.teamteam.witherest.lazyload.ImageLoader;
import com.teamteam.witherest.model.Session;
import com.teamteam.witherest.service.ArticleService;
import com.teamteam.witherest.service.Service;
import com.teamteam.witherest.service.ServiceManager;
import com.teamteam.witherest.service.callback.ArticleServiceCallback;
import com.teamteam.witherest.service.callback.object.ArticleActionResponseObject;
import com.teamteam.witherest.service.callback.object.BaseResponseObject;

public class BoardContentActivity extends Activity implements ArticleServiceCallback{
	
	public int messageId;
	public int writerId;
	public String writerImagePath;
	public String writerNickname;
	public String message;
	public String writeTime;
	public int replyCount;
	
	public ImageView writerImageView;
	public TextView writerNameView;
	public TextView messageView;
	public TextView replyCountView;
	public TextView writeTimeView;
	
	public Button submitBtn;
	public EditText writeEdit;
	
	public SimpleProgressDialog waitProgressDialog;
	public ImageLoader imageLoader; 
	
	public int returningActionCount= 0; 
	public ArticleService articleService;
	
	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
	    requestWindowFeature(Window.FEATURE_NO_TITLE);
	    setContentView(R.layout.activity_board_content);
	
	    initInstance();
		initView();
		initListener();
	}
	
	private void initInstance() {
		Intent i = getIntent();
		if (i == null){
			AndroUtils.showToastMessage(this, R.string.wrong_approach, Toast.LENGTH_SHORT);
			return; 
		}
		
		messageId = i.getIntExtra("messageId", -1);
		writerId = i.getIntExtra("writerId", -1);
		writerImagePath = i.getStringExtra("writerImagePath");
		writerNickname = i.getStringExtra("writerNickname");
		message = i.getStringExtra("message");
		writeTime = i.getStringExtra("writeTime");
		replyCount = i.getIntExtra("replyCount",-1);
		
		imageLoader = new ImageLoader(this);
		imageLoader.clearCache();
		articleService = ServiceManager.getServiceManager().getArticleService();
		
	}
		
	private void initView() {
		writerImageView = (ImageView)findViewById(R.id.roomboard_row_image);
		writerNameView = (TextView)findViewById(R.id.roomboard_textview1);
		messageView = (TextView)findViewById(R.id.roomboard_textview2);
		replyCountView = (TextView)findViewById(R.id.reply_count);
		writeTimeView = (TextView)findViewById(R.id.roomboard_textview3);
		submitBtn = (Button)findViewById(R.id.roomboard_write_btn);
		writeEdit = (EditText)findViewById(R.id.roomboard_write_edittext);
		
		writerImageView.setImageBitmap(null);
		String url = null;
		if (CommonUtils.isNullOrEmpty(writerImagePath) || "0".equals(writerImagePath)){
			url = Service.BASE_URL + writerImagePath;
		}
		imageLoader.displayImage(url, writerImageView);
		
		writerNameView.setText(writerNickname);
		messageView.setText(message);
		writeTimeView.setText(writeTime);
		replyCountView.setText(CommonUtils.int2string(replyCount));
	}

	private void initListener() {
		submitBtn.setOnClickListener(submitBtnListener) ;
	}
	
	//댓글 쓰기 리스너 
	OnClickListener submitBtnListener = new View.OnClickListener() {
		public void onClick(View v) {
			if (CommonUtils.isNullOrEmpty(writeEdit.getText().toString().trim())){
				AndroUtils.showToastMessage(BoardContentActivity.this, getResources().getString(R.string.no_text),
						Toast.LENGTH_SHORT);
				return;
			}
			AndroUtils.hideSoftKeyboard(BoardContentActivity.this, writeEdit);
			submitReply(writeEdit.getText().toString());
		}

	};
	
	private void submitReply(String string) {
		waitProgressDialog = new SimpleProgressDialog(BoardContentActivity.this, 
				getString(R.string.wait_title),getString(R.string.wait_message));
		waitProgressDialog.start();
		
		ArticleService articleService = ServiceManager.getServiceManager().getArticleService();
		articleService.setOnArticleCallback(this);	
		articleService.submitReplyComment(writeEdit.getText().toString().trim(), 
				RoomDetailActivity.roomWithFragment.roomWithResponse.checkRoomWith.roomId, messageId);
		
	}

	public void onArticleServiceCallback(BaseResponseObject object) {
		if (waitProgressDialog.isShowing()){
			SimpleProgressDialog.stop(waitProgressDialog);
		}
		
		if (object.resultCode == Service.RESULT_FAIL) {
			AndroUtils.showToastMessage(this, object.requestType + " : " + object.resultMsg, Toast.LENGTH_SHORT);
			return;
		}
		
		switch(object.requestType){
		case Service.REQUEST_TYPE_SUBMIT_REPLY_COMMENT :
			AndroUtils.showToastMessage(this, object.requestType + " : " + object.resultMsg, Toast.LENGTH_SHORT);
			writeEdit.setText("");
			ArticleActionResponseObject obj = (ArticleActionResponseObject)object;
			addReply(obj);
			break;
			
		case Service.REQUEST_TYPE_DELETE_COMMENT:
			ArticleActionResponseObject obj1 = (ArticleActionResponseObject)object;
			deleteReply(obj1);
			break;
		}			
		
	}

	private void deleteReply(ArticleActionResponseObject obj1) {
		returningActionCount--;
	}

	private void addReply(ArticleActionResponseObject obj) {
		returningActionCount++;
	}
	
	@Override
	public boolean onKeyDown(int keyCode, KeyEvent event) {
		if (keyCode == KeyEvent.KEYCODE_BACK) {
			Intent i = new Intent();
			i.putExtra("parentMessageId", messageId);
			i.putExtra("increase", returningActionCount);
			setResult(RESULT_OK, i);
			finish();
			return true;
		}

		return super.onKeyDown(keyCode, event);
	}
}
